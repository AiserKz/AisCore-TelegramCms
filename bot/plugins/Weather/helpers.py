import requests, time

_weather_cache = {}

def get_weather(city: str, api: str, units: str = "metric", lang: str = "ru", CACHED_TIMEOUT: int = 600 ) -> str:
    now = time.time()
    if city in _weather_cache:
        cached = _weather_cache[city]
        if now - cached['time'] < CACHED_TIMEOUT:
            return cached["data"]
        
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&units={units}&lang={lang}&appid={api}"
    response = requests.get(url)

    if response.status_code == 200:
        resp = response.json()
        temp = resp['main']['temp']
        feels_like = resp['main']['feels_like']
        description = resp['weather'][0]['description']
        wind_speed = resp['wind']['speed']
        humidity = resp['main']['humidity']
        pressure = int(resp['main']['pressure'] * 0.75)  # –ø–µ—Ä–µ–≤–æ–¥ –≤ –º–º —Ä—Ç. —Å—Ç.
        clouds = resp['clouds']['all']

        data = (
            f"üìç <b>–ü–æ–≥–æ–¥–∞ –≤ {city}</b>: {temp}¬∞C\n"
            f"ü§î –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: <b>{feels_like}¬∞C</b>\n"
            f"üå§ {description.capitalize()}\n"
            f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: <b>{wind_speed} –º/—Å</b>\n"
            f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: <b>{humidity}%</b>\n"
            f"üîΩ –î–∞–≤–ª–µ–Ω–∏–µ: <b>{pressure} –º–º —Ä—Ç. —Å—Ç.</b>\n"
            f"‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: <b>{clouds}%</b>"
        )
        
        _weather_cache[city] = {"time": now, "data": data}
        return data

    # –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    try:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {response.json().get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"
    except Exception:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞: —Å—Ç–∞—Ç—É—Å {response.status_code}"

